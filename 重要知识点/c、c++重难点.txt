本文主要讲述C/C++的部分重难知识点
												Created by WuHaojie on 2015/09/18
一、结构体和联合体
	结构体：struct
		内部各成员共组为一个数据类型
		各成员拥有各自的内存空间，总内存为所有成员内存之和
		eg: typedef struct Student {
			string name;
			int age;
			IDcard id;	//在下文中定义
		}STUDENT a, b;
			a.name = "zhangsan"; a.age = 20; a.id.hasId = false; 

	联合体：union
		内部各成员只能选择一项使用
		各成员同时共享一块内存空间，总内存为成员中最大者的内存
		eg:	typedef union IDcard {
			bool hasId;	//是否具有Id 布尔值数据类型:只能取true或false 
			long idNum;
		}ID_CARD id1, id2;
			id1.idNum = 2015001;
			// id1.hasId = false;	//此处错误，联合体不能同时拥有两个成员
			id1.hasId = false;		//正确


二、指针函数和函数指针
	指针函数：返回值为指针的函数
		格式：类型说明符 * 函数名(参数)
		eg：int* max(int *a, int *b){	//传入两个数（指针传入）	//注意 值传递 引用传递的区别
			return a>b ? &a : &b;	
		}

	函数指针：指向函数的指针
		格式：类型说明符 (*函数名)(参数)
		eg：void function(){}	//一个函数
			void (*fun_ptr)();
			fun_ptr = function;	//或者 &function 给指针赋值
			(*fun_ptr)();		//使用指针调用function函数


三、指针常量和常量指针
	指针常量：const修饰指针
			int a；
			int * const p = &a	//指针常量，*p可以修改*p = 8；（OK）
								//p不可以修改 p++（ERROR）

	常量指针：const修饰int
			int a，b；
			const int *p = &a；	//常量指针，*p不可修改 *p = 8；（ERROR）
								//p 可以修改 p = &b  （OK）